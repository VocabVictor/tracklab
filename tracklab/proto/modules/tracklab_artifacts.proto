syntax = "proto3";

package tracklab_artifacts;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "tracklab_base.proto";
import "tracklab_telemetry.proto";

option go_package = "core/pkg/service_go_proto";

message ArtifactManifest {
  int32 version = 1;
  string storage_policy = 2;
  repeated StoragePolicyConfigItem storage_policy_config = 3;
  // Only one of {contents, manifest_file_path} should be set.
  repeated ArtifactManifestEntry contents = 4;
  // `manifest_file_path` is used for manifests that approach the 2GiB message limit.
  // It should point to a gzipped, line-delimited JSON file containing manifest entries.
  string manifest_file_path = 5;
}

message ArtifactManifestEntry {
  string path = 1;
  string digest = 2;
  string ref = 3;
  int64 size = 4;
  string mimetype = 5;
  string local_path = 6;
  string birth_artifact_id = 7;
  // Whether to avoid copying/moving files to the cache while uploading.
  bool skip_cache = 8;
  repeated ExtraItem extra = 16;
}

message DownloadArtifactRequest {
  string artifact_id = 1;
  string download_root = 2;
  bool allow_missing_references = 4;
  bool skip_cache = 5;
  string path_prefix = 6;
  _RequestInfo _info = 200;
}

message DownloadArtifactResponse {
  string error_message = 1;
}

message LinkArtifactRequest {
  string client_id = 1;
  string server_id = 2;
  string portfolio_name = 3;
  string portfolio_entity = 4;
  string portfolio_project = 5;
  repeated string portfolio_aliases = 6;
  string portfolio_organization = 7;
  _RecordInfo _info = 200;
}

message LinkArtifactResponse {
  string error_message = 1;
  optional int32 version_index = 2;
}

message LogArtifactRequest {
  ArtifactRecord artifact = 1;
  int64 history_step = 2;
  string staging_dir = 3;
  _RequestInfo _info = 200;
}

message LogArtifactResponse {
  string artifact_id = 1;
  string error_message = 2;
}

message PartialJobArtifact {
  string job_name = 1;
  JobSource source_info = 2;
}
